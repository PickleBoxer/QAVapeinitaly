name: Playwright Tests
on:
  ## Manual execution on branch
  workflow_dispatch:
  ## Nightly
  ### Needs secrets
  #### QA_UPLOAD_TOKEN
  #### TEST_USER_EMAIL
  #### TEST_USER_PASSWORD
  #### API_BASE_URL
  schedule:
    - cron: '0 0 * * *'
jobs:
  test:
    name: Run Playwright Tests
    if: ${{ github.event_name == 'schedule' }} || ${{ github.event_name == 'workflow_dispatch' }}
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      TOKEN: ${{ secrets.QA_UPLOAD_TOKEN }}
      CAMPAIGN: "vapeinitaly"
      PLATFORM: "chromium"
      API_BASE_URL: ${{ secrets.API_BASE_URL }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      env:
        TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
        TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
      run: npx playwright test
    - name: Rename results.json to production filename
      run: |
        mv results.json "$(date +%Y-%m-%d)-production.json"
        echo "FILENAME=$(date +%Y-%m-%d)-production.json" >> $GITHUB_ENV
    - name: Upload results to API
      run: |
        curl -X POST "${API_BASE_URL}/upload" \
          -F "report=@${FILENAME}" \
          -F "token=${TOKEN}"
    - name: Notify API of new report
      run: |
        curl -v "${API_BASE_URL}/playwright?token=${TOKEN}&filename=${FILENAME}&campaign=${CAMPAIGN}&platform=${PLATFORM}"
